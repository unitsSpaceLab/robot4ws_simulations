<!-- 
     @author: Matteo Caruso
     @email: matteo.caruso@phd.units.it
     @email: matteo.caruso1993@gmail.com
 -->
 
<launch>
    <arg name="model" default="$(find robot4ws_description)/urdf/rover.urdf.xacro"/>

    <arg name="default_world" default="false"/>
    <arg name="world_name" default="only_walls_and_obstacles.world"/>
    <!-- <arg name="world_name" default="MSL_Gale_DEM_Mosaic_1m_v3_X_14315-14364_Y_47079-47098_v1.world"/> -->
    <arg name="world_path_custom" default="$(find robot4ws_description)/urdf/worlds"/> <!--$(find robot4ws_description)/urdf/worlds/step.world-->

    <arg name="use_rviz" default="false"/>
    <arg name="start_qt_gui" default="false"/>
    <arg name="include_plugins" default="true"/>
    <arg name="include_kinematics_plugin" default="true"/>
    <arg name="include_ros_control" default="false"/>
    <arg name="pos_x" default="0"/>
    <arg name="pos_y" default="0"/>
    <arg name="pos_z" default="0.17"/>
    <!-- <arg name="pos_z" default="0.30"/> -->
    <!-- <arg name="pos_z" default="6.009720"/> <!- for MSL_Gale_DEM_Mosaic_1m_v3_X_14315-14364_Y_47079-47098_v1 -->
    <arg name="pos_roll" default="0"/>
    <arg name="pos_pitch" default="0"/>
    <arg name="pos_yaw" default="0"/>
    <!-- <arg name="pos_pitch" default="0.294121"/> <!- for MSL_Gale_DEM_Mosaic_1m_v3_X_14315-14364_Y_47079-47098_v1 -->
    <!-- <arg name="pos_yaw" default="0"/> -->

    <!-- Model related arguments -->
    <arg name="show_imu" default="false"/>
    <arg name="show_cameras" default="false"/>
    <arg name="show_laser_scan" default="false"/>
    <arg name="show_pi_camera" default="false"/>
    <arg name="show_realsense" default="false"/>

    <arg name="rocker_differential" default="false"/>


    <param name="robot_description" command="$(find xacro)/xacro $(arg model) include_plugins:=$(arg include_plugins)
     include_kinematics_plugin:=$(arg include_kinematics_plugin) include_ros_control:=$(arg include_ros_control)
     show_cameras:=$(arg show_cameras) visualize_scan:=$(arg show_laser_scan) visualize_imu:=$(arg show_imu)
     visualize_pi_camera:=$(arg show_pi_camera) visualize_realsense:=$(arg show_realsense) rocker_differential:=$(arg rocker_differential)"/>

    

    <group if="$(arg include_kinematics_plugin)">
        <rosparam command="load" file="$(find robot4ws_simulations)/config/kinematics_config.yaml"/>
    </group>
    

    <group unless="$(arg default_world)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <!-- <arg name="physics" value="ode"/> -->
            <arg name="world_name" value="$(arg world_path_custom)/$(arg world_name)"/>
            <arg name="paused" value="true"/>
            <arg name="use_sim_time" value="true"/>
            <arg name="gui" value="true"/>
            <arg name="debug" value="false"/>
            <!--arg name="world_name" value="$(arg world_path)"/-->
    </include>
    </group>
    <group if="$(arg default_world)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="paused" value="true"/>
            <arg name="use_sim_time" value="true"/>
            <arg name="gui" value="true"/>
            <!--arg name="world_name" value="$(arg world_path)"/-->
    </include>
    </group>


    <node name="archimede_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model Archimede -x $(arg pos_x) -y $(arg pos_y) -z $(arg pos_z) -R $(arg pos_roll) -P $(arg pos_pitch) -Y $(arg pos_yaw)"/>
    <node name="archimede_base_footprint" pkg="tf" type="static_transform_publisher" args="0 0 0.16 0 0 0 Archimede_foot_print Archimede_base_link 0.01"/>


    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="Archimede">
        <!-- <remap from="joint_states" to="/Archimede/joint_states"/> -->
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>

    <include file="$(find robot4ws_description)/launch/controllers.launch"/>

    <group if="$(arg use_rviz)">
        <node name="archimede_rviz_node" pkg="rviz" type="rviz" args="-d $(find robot4ws_description)/rviz/default.rviz"/>
    </group>

    <group if="$(arg start_qt_gui)">
        <node name="archimede_gui" pkg="rqt_gui" type="rqt_gui"/>
    </group>







</launch>